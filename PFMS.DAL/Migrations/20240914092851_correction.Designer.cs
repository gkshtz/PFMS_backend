// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PFMS.DAL.Data;

#nullable disable

namespace PFMS.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240914092851_correction")]
    partial class correction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PFMS.DAL.Entities.TotalTransactionAmount", b =>
                {
                    b.Property<Guid>("TotalTransactionAmountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("totalTransactionAmountId");

                    b.Property<DateTime>("LastTransactionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastTransactionDate");

                    b.Property<decimal>("TotalExpence")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("totalExpence");

                    b.Property<decimal>("TotalIncome")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("totalIncome");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("TotalTransactionAmountId");

                    b.HasIndex("UserId");

                    b.ToTable("TotalTransactionAmounts");
                });

            modelBuilder.Entity("PFMS.DAL.Entities.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("transactionId");

                    b.Property<Guid>("TotalTransactionAmountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("totalTransactionAmountId");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("transactionAmount");

                    b.Property<Guid>("TransactionCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("transactionCategoryId");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("transactionDate");

                    b.Property<string>("TransactionDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("transactionDescription");

                    b.Property<string>("TransactionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("transactionName");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("transactionType");

                    b.HasKey("TransactionId");

                    b.HasIndex("TotalTransactionAmountId");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PFMS.DAL.Entities.TransactionCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("categoryId");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("categoryName");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("transactionType");

                    b.HasKey("CategoryId");

                    b.ToTable("TransactionCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("0a98cbbb-74a4-42b4-8a4f-f02775b2ce85"),
                            CategoryName = "Travel",
                            TransactionType = "Expense"
                        },
                        new
                        {
                            CategoryId = new Guid("a2d7aa11-24f2-44c2-85a1-787c95afc34d"),
                            CategoryName = "Food",
                            TransactionType = "Expense"
                        },
                        new
                        {
                            CategoryId = new Guid("0c3b10f5-ff22-4f8d-8c14-32908c11efc9"),
                            CategoryName = "Shopping",
                            TransactionType = "Expense"
                        },
                        new
                        {
                            CategoryId = new Guid("55460ca7-9ea9-4576-b067-18c72d925456"),
                            CategoryName = "Rent and Bills",
                            TransactionType = "Expense"
                        },
                        new
                        {
                            CategoryId = new Guid("c7b57c96-7034-44de-89aa-2b45323d82cd"),
                            CategoryName = "Home Necessities",
                            TransactionType = "Expense"
                        },
                        new
                        {
                            CategoryId = new Guid("92ca68b2-e05b-40cf-981b-5abfea29a8c2"),
                            CategoryName = "Others",
                            TransactionType = "Expense"
                        },
                        new
                        {
                            CategoryId = new Guid("bf295b65-d41b-4684-96d5-0a674aa96eb6"),
                            CategoryName = "Salary",
                            TransactionType = "Income"
                        },
                        new
                        {
                            CategoryId = new Guid("da49303b-843a-4b6e-acf8-4caf75043afb"),
                            CategoryName = "Sale",
                            TransactionType = "Income"
                        },
                        new
                        {
                            CategoryId = new Guid("0f1a7152-3c07-4ddc-a370-06ad886995d4"),
                            CategoryName = "Others",
                            TransactionType = "Income"
                        });
                });

            modelBuilder.Entity("PFMS.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PFMS.DAL.Entities.TotalTransactionAmount", b =>
                {
                    b.HasOne("PFMS.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PFMS.DAL.Entities.Transaction", b =>
                {
                    b.HasOne("PFMS.DAL.Entities.TotalTransactionAmount", "TotalTransactionAmount")
                        .WithMany()
                        .HasForeignKey("TotalTransactionAmountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFMS.DAL.Entities.TransactionCategory", "TransactionCategory")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TotalTransactionAmount");

                    b.Navigation("TransactionCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
